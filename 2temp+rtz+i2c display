//#include <SPI.h>
//#include <Adafruit_GFX.h>
//#include <Adafruit_PCD8544.h>
#include <OneWire.h>
OneWire ds(7);

#include <OLED_I2C.h>
#include "DHT.h"
#define DHTTYPE DHT11 
#define DHTPIN 2 
#include <DS1307.h>           // Подключение библиотеки для часового модуля
DS1307 rtc(A0, A1);
OLED  myOLED(SDA, SCL, 8);

extern uint8_t SmallFont[];
extern uint8_t BigNumbers[];

DHT dht(DHTPIN, DHTTYPE);
 


// Software SPI (slower updates, more flexible pin options):
// pin 7 - Serial clock out (SCLK)
// pin 6 - Serial data out (DIN)
// pin 5 - Data/Command select (D/C)
// pin 4 - LCD chip select (CS)
// pin 3 - LCD reset (RST)
//Adafruit_PCD8544 display = Adafruit_PCD8544(12, 11, 10, 9, 8);

// Hardware SPI (faster, but must use certain hardware pins):
// SCK is LCD serial clock (SCLK) - this is pin 13 on Arduino Uno
// MOSI is LCD DIN - this is pin 11 on an Arduino Uno
// pin 5 - Data/Command select (D/C)
// pin 4 - LCD chip select (CS)
// pin 3 - LCD reset (RST)
// Adafruit_PCD8544 display = Adafruit_PCD8544(5, 4, 3);
// Note with hardware SPI MISO and SS pins aren't used but will still be read
// and written to during SPI transfer.  Be careful sharing these pins!
/*
#define NUMFLAKES 10
#define XPOS 0
#define YPOS 1
#define DELTAY 2


#define LOGO16_GLCD_HEIGHT 16
#define LOGO16_GLCD_WIDTH  16

static const unsigned char PROGMEM logo16_glcd_bmp[] =
{ B00000000, B11000000,
  B00000001, B11000000,
  B00000001, B11000000,
  B00000011, B11100000,
  B11110011, B11100000,
  B11111110, B11111000,
  B01111110, B11111111,
  B00110011, B10011111,
  B00011111, B11111100,
  B00001101, B01110000,
  B00011011, B10100000,
  B00111111, B11100000,
  B00111111, B11110000,
  B01111100, B11110000,
  B01110000, B01110000,
  B00000000, B00110000 };
*/
void setup()   {
  myOLED.begin();
  myOLED.setFont(SmallFont);
 // Serial.begin(9600);
  dht.begin();
  rtc.halt(false); 
// rtc.setDOW(THURSDAY);         // Настройка дня недели  
// rtc.setTime(23,33, 0);      // Настройка времени 
// rtc.setDate(18, 02, 2016);  // Настройка даты
  /*display.begin();
  // init done

  // you can change the contrast around to adapt the display
  // for the best viewing!
  display.setContrast(50);

  display.display(); // show splashscreen
  delay(1000);
  display.clearDisplay();   // clears the screen and buffer
  
 // temp();
 // display.display();
 // delay(2000);
 // display.clearDisplay();   
//  testdrawchar();
 // display.display();
 // delay(2000);
 // display.clearDisplay();
*/
}


void loop() {
  
  float h = dht.readHumidity();
  float t = dht.readTemperature();
//  myOLED.clrScr();
  
  myOLED.print("10.12.9.10/24", CENTER, 0);
  myOLED.print("temp 1", LEFT, 16);
  myOLED.print("temp 2", RIGHT, 16);
  
  myOLED.setFont(SmallFont);
  myOLED.print(rtc.getDOWStr(), CENTER, 18);   // Отображение дня недели
  String stringOne = rtc.getTimeStr();
  myOLED.setFont(SmallFont);
  myOLED.print(stringOne.substring(0,2), 45, 35);   // Отображение часов
  myOLED.print(":", 61, 35);                       // Отображение двоеточия
  myOLED.print(stringOne.substring(3,5), 70, 35);  // Отображение минут
  myOLED.print(rtc.getDateStr(), CENTER, 57);      // Отображение даты
  myOLED.update();
  //delay(500);
                      // Скрытие двоеточия
  myOLED.print(" ", 60, 35);
  myOLED.update();
 
  
  
//  myOLED.print("89", 100, 25);


/*    display.display();
    //display.begin();
    display.setContrast(50);
    display.clearDisplay();
    display.setTextSize(4);
    display.setTextColor(BLACK);
    display.setCursor(0,0);
*/
    byte data[2];
    ds.reset(); 
    ds.write(0xCC);
    ds.write(0x44);
    //delay(2000);
    ds.reset();
    ds.write(0xCC);
    ds.write(0xBE);
    data[0] = ds.read(); 
    data[1] = ds.read();
    int Temp = (data[1]<< 8)+data[0];
    Temp = Temp>>4;

/*if (Temp > 0){
myOLED.print(" + ", 5, 25);

 // display.print(" + ");
} else {}*/
myOLED.setFont(BigNumbers);
myOLED.printNumI(Temp, LEFT, 25);
myOLED.update();  
myOLED.printNumI(t, RIGHT, 25);
myOLED.setFont(SmallFont);
myOLED.printNumI(h, 107, 52);
myOLED.print("%",RIGHT, 52);
myOLED.update();  
//display.println(Temp);
 //display.setTextSize(1);
//display.println("Ether DHCP:");
//display.println("192.168.0.105");
//delay(2000);
  myOLED.setFont(SmallFont);
}
